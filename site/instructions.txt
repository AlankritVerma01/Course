Title: UTSC Course Information Website

Description:
The website is a helper website which a student can use while he is doing his course planning by searching for courses and visualising their prerequisites and postrequisites.
Currently, only the CMS courses can be visualised as we were able to just find data about them.

IMPORTANT

HOW TO RUN THE WEBSITE
1. Create virtual environment and activate it
	python3 -m venv venv
	Note: Activation depends on operating system (https://docs.python.org/3/library/venv.html#how-venvs-work)
2. Install site dependencies at the requirements.txt file in venv using pip
	pip install -r requirements.txt
3. Run [main.py](http://main.py) file
	python3 main.py
4. Open site in BROWSER
	URL: http://localhost:8001
5. Click login button and log in with credentials
	Username: foo
	Password: bar

Features:
1. Requisite Tree
    1. Find all the prerequisites of courses and displays them in a graphs. In case, the user selects more than 1 course, the graph that is generated is connected = just 1 graph is made for both the courses.
		Note - if there are no common prerequisite courses then there is not way to merge the graphs so it just displays them separately.
		The main idea behind this is that, if a student wants to take a course, he will be able to see all the courses which he needs to take in order.
		Also if he plans to take more than 1 intended courses, he will see all the courses he needs to take in a graphs.
		For the creation of the graphs we are using the D3.js library. 
    2. Find all courses which have a given course(s) as a partial pre-requisite.
		The term post-requisite means that all the courses which have the given course(s) as a prerequisite.
		So for examples, as the courses CSCA08 is prerequisite for a lot of courses, the graphs shows all the courses which have CSCA08 as a prerequisite.
		Also, to be clear, the graph that is shown is shown in order.
    3. Find all courses which have a given course(s) as the complete prerequisite.
		The courses that are listed here are the courses which the user can take after he has done the given selected courses. 
    4. For all the graphs that are made, the color red is used to highlight the head nodes and proper arrows are shown to clear the depiction. 
    5. Another important feature is when a user clicks on any course (node) on the graph, he is redirected to a page which gives him the full information about the course. 
2. Course reviews and comments 
    1. For each course in the database, we have implemented a course review page.
    2. Here a user can come and add his reviews to the course and give it ratings.
    3. Additionally, a user can also sort though all the courses based upon the average rating or number of reviews that a course has. 
3. Course Search
    1. From all the database of the courses that we have, a user is able to search courses and sort them based on different parameters. 
    2. When a user clicks on a course, he is redirected to the courseâ€™s webpage which have all the information about the courses (also the ratings and the reviews). 

Other features of the website - 

1. We also have implemented a login page, where a user can log and we store his data. When a user logs in, we are able to store his data and courses he has already taken and then show them on our home page.

Important Files:
main.py - Flask functions for creating website (GET and POST decorators at bottom of file)
requisite_tree.py - Functions for creating pre/postrequisite tree objects
sqlite_db.py - Functions for directly handling sqlite3 database (ex. contains SQL table queries)
templates/template.html - Template used by website
static/js/courses-tree-visual.js - File containing requisite tree rendering code
